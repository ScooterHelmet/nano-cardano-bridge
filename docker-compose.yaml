version: '3'

services:
  cardanod:
    image: inputoutput/cardano-node:1.27.0  # https://hub.docker.com/r/inputoutput/cardano-node
    # command:
      # - 
    container_name: cardanod
    environment:
      - NETWORK=mainnet                     # Does not require: configuration.yaml, genesis.json, topology.json
    # expose:
    #   - 'xxxxx'                           # Only be accessible to linked services â€“ not accessible from outside world
    networks:
      default:
    # ports: ['8080:8080']                  # Direct access to the container on <port>
    restart: unless-stopped
    volumes:
      - cardanod:/data
      - node-ipc:/ipc                       # Used for establishing cross-container communication via "node.socket"
      # - type: bind
      #   source: ${PWD}/configuration/cardano/configuration.yaml
      #   target: /configuration
      #   read_only: true
      
  nanod:
    image: nanocurrency/nano-test:V22.1     # https://docs.nano.org/running-a-node/node-setup/#step-2-pull-the-docker-image
    # command:
      # -
    container_name: nanod                   # https://docs.nano.org/running-a-node/node-setup/#step-3-start-the-node
    # environment: 
    #   - 
    # expose:
      # - 'xxxx'
    networks: 
      default:
    ports: ['17075:17075', '17076:17076', '17077:17077', '17078:17078'] # https://docs.nano.org/running-a-node/node-setup/#configure-network-ports
    restart: unless-stopped
    volumes:
      - nanod:/root
      # - type: bind
      #   source: ${PWD}/configuration/nano/config-rpc.toml
      #   target: /root
      #   read_only: true
      
networks:
  default:

volumes:
  cardanod:
  nanod:
  node-ipc:
  